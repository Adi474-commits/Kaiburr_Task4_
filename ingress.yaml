apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kaiburr-ingress
  namespace: kaiburr-app
  labels:
    app: kaiburr-task-manager
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
    nginx.ingress.kubernetes.io/proxy-body-size: "16m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
spec:
  ingressClassName: nginx
  rules:
  - host: kaiburr.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: kaiburr-backend-service
            port:
              number: 8080
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kaiburr-frontend-service
            port:
              number: 80
  - host: api.kaiburr.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kaiburr-backend-service
            port:
              number: 8080
  - host: app.kaiburr.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kaiburr-frontend-service
            port:
              number: 80
---
# TLS Secret for HTTPS (optional)
apiVersion: v1
kind: Secret
metadata:
  name: kaiburr-tls-secret
  namespace: kaiburr-app
type: kubernetes.io/tls
data:
  # Add your TLS certificate and key here (base64 encoded)
  # tls.crt: <base64-encoded-certificate>
  # tls.key: <base64-encoded-private-key>
---
# Ingress with TLS (for production)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kaiburr-ingress-tls
  namespace: kaiburr-app
  labels:
    app: kaiburr-task-manager
    component: ingress-tls
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - kaiburr.local
    - api.kaiburr.local
    - app.kaiburr.local
    secretName: kaiburr-tls-secret
  rules:
  - host: kaiburr.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: kaiburr-backend-service
            port:
              number: 8080
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kaiburr-frontend-service
            port:
              number: 80
  - host: api.kaiburr.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kaiburr-backend-service
            port:
              number: 8080
  - host: app.kaiburr.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kaiburr-frontend-service
            port:
              number: 80