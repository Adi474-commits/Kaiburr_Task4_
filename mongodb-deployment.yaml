apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
  labels:
    app: mongodb
    component: storage
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /mnt/data/mongodb
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: kaiburr-app
  labels:
    app: mongodb
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: kaiburr-app
  labels:
    app: mongodb
    component: config
data:
  mongod.conf: |
    storage:
      dbPath: /data/db
      journal:
        enabled: true
    systemLog:
      destination: file
      logAppend: true
      path: /var/log/mongodb/mongod.log
      logRotate: reopen
    net:
      port: 27017
      bindIp: 0.0.0.0
    processManagement:
      timeZoneInfo: /usr/share/zoneinfo
    security:
      authorization: enabled
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: kaiburr-app
  labels:
    app: mongodb
    component: secret
type: Opaque
data:
  # Base64 encoded values (change these in production!)
  # mongodb-root-username: admin (YWRtaW4=)
  # mongodb-root-password: password123 (cGFzc3dvcmQxMjM=)
  mongodb-root-username: YWRtaW4=
  mongodb-root-password: cGFzc3dvcmQxMjM=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: kaiburr-app
  labels:
    app: mongodb
    component: database
    version: v1
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
        component: database
        version: v1
    spec:
      serviceAccountName: mongodb-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: mongodb
        image: mongo:7.0.4
        imagePullPolicy: Always
        ports:
        - containerPort: 27017
          name: mongodb
          protocol: TCP
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-root-password
        - name: MONGO_INITDB_DATABASE
          value: "kaiburr"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /etc/mongod.conf
          subPath: mongod.conf
          readOnly: true
        - name: mongodb-logs
          mountPath: /var/log/mongodb
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 999
          capabilities:
            drop:
            - ALL
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
      - name: mongodb-config
        configMap:
          name: mongodb-config
          items:
          - key: mongod.conf
            path: mongod.conf
      - name: mongodb-logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: kaiburr-app
  labels:
    app: mongodb
    component: database
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongodb
  selector:
    app: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-nodeport
  namespace: kaiburr-app
  labels:
    app: mongodb
    component: database
    service-type: nodeport
spec:
  type: NodePort
  ports:
  - port: 27017
    targetPort: 27017
    nodePort: 30017
    protocol: TCP
    name: mongodb
  selector:
    app: mongodb